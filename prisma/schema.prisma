// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  STAFF
  PROVIDER_ADMIN
  VENUE_ADMIN
  CUSTOMER
  SOLE_TRADER
}

model User {
  id String @id @default(uuid())
  email String @unique
  firstName String?
  lastName String?
  passwordHash String?
  accessToken String? @unique
  refreshToken String? @unique
  facebookId String? @unique
  googleId String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role Role
  VenueAdmin VenueAdmin[]
}

model Venue {
  id String @id @default(uuid())
  businessName String
  isSoleTrader Boolean @default(false)
  VenueAdmin VenueAdmin[]
  Service Service[]
  BusinessHours BusinessHours[]
  HolidayDays HolidayDays[]
}

model VenueAdmin {
  id String @id @default(uuid())
  userId String
  venueId String
  user User @relation(fields: [userId], references: [id])
  venue Venue @relation(fields: [venueId], references: [id])
}

model Category {
  id Int @id @default(autoincrement())
  name String
  SubCategory SubCategory[]
  Service Service[]
}

model SubCategory {
  id Int @id @default(autoincrement())
  name String
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  Service Service[]
}

model Service {
  id Int @id @default(autoincrement())
  description String
  price Float
  duration Int
  venueId String
  venue Venue @relation(fields: [venueId], references: [id])
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  subCategoryId Int
  subCategory SubCategory @relation(fields: [subCategoryId], references: [id])
}

enum Weekday {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model BusinessHours {
  id      String   @id @default(uuid())
  weekday Weekday
  open    String?
  close   String?
  closed  Boolean  @default(false)
  venueId String
  venue   Venue @relation(fields: [venueId], references: [id])
}

model HolidayDays {
  id      String   @id @default(uuid())
  date    DateTime
  name    String?  // Optional name for the holiday
  venueId String
  venue   Venue @relation(fields: [venueId], references: [id])
}
